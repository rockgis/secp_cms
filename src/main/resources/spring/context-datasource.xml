<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- <bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">  
        <property name="algorithm" value="PBEWithMD5AndDES" />  
        <property name="password" value="mediacore" />
	</bean>  
	       
	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">  
		<property name="config" ref="environmentVariablesConfiguration" />  
	</bean>  
	      
	<bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer" >  
	        <constructor-arg ref="configurationEncryptor" />
	        <property name="locations">  
	            <list>  
	                <value>classpath:/config/mc.properties</value>  
	            </list>  
	        </property>  
	</bean> -->
	
	<!-- 제우스 JNDI 사용시 설정
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName">
      		<value>dataSource</value>
    	</property>
  	</bean> -->
	
	<bean id="mc.propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
	            <value>classpath:/config/mc.properties</value>
                <!--<value>classpath:/egovframework/egovProps/globals.properties</value>-->
            </list>
        </property>
    </bean>

	<!-- DataSource -->
    <alias name="mc.dataSource-${Globals.Main.DbType}" alias="mc.dataSource"/>

	<!-- MySQL -->
	<bean id="mc.dataSource-mysql" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${Globals.mysql.DriverClassName}"/>
		<property name="url" value="${Globals.mysql.Url}" />
		<property name="username" value="${Globals.mysql.UserName}"/>
		<property name="password" value="${Globals.mysql.Password}"/>
		<property name="validationQuery" value="select 1" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxActive" value="200" />
		<property name="maxWait" value="1000" />
		<property name="maxIdle" value="100" />		
	</bean>

	<!-- Oracle -->
	<bean id="mc.dataSource-oracle" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${Globals.oracle.DriverClassName}"/>
		<property name="url" value="${Globals.oracle.Url}" />
		<property name="username" value="${Globals.oracle.UserName}"/>
		<property name="password" value="${Globals.oracle.Password}"/>
		<property name="validationQuery" value="select 1 from dual" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxActive" value="200" />
		<property name="maxWait" value="1000" />
		<property name="maxIdle" value="100" />				
	</bean>

	<!-- Altibase -->
	<bean id="mc.dataSource-altibase" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${Globals.altibase.DriverClassName}"/>
		<property name="url" value="${Globals.altibase.Url}" />
		<property name="username" value="${Globals.altibase.UserName}"/>
		<property name="password" value="${Globals.altibase.Password}"/>
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<!-- Tibero -->
	<bean id="mc.dataSource-tibero" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${Globals.tibero.DriverClassName}"/>
		<property name="url" value="${Globals.tibero.Url}" />
		<property name="username" value="${Globals.tibero.UserName}"/>
		<property name="password" value="${Globals.tibero.Password}"/>
		<property name="validationQuery" value="select 1 from dual" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="maxActive" value="200" />
		<property name="maxWait" value="1000" />
		<property name="maxIdle" value="100" />				
	</bean>

    <!-- cubrid -->
    <bean id="mc.dataSource-cubrid" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${Globals.cubrid.DriverClassName}"/>
        <property name="url" value="${Globals.cubrid.Url}" />
        <property name="username" value="${Globals.cubrid.UserName}"/>
        <property name="password" value="${Globals.cubrid.Password}"/>
    </bean>

    <!-- DB Pool이 생성이 되더라고 특정 시간 호출되지 않으면 DBMS 설정에 따라 연결을 끊어질 때
		이 경우 DBCP를 사용하셨다면.. 다음과 같은 설정을 추가하시면 연결을 유지시켜 줍니다. -->
	<!--
	<property name="validationQuery" value="select 1 from dual" />
	<property name="testWhileIdle" value="true" />
	<property name="timeBetweenEvictionRunsMillis" value="60000" /> -->  <!-- 1분 -->

	<!-- DBCP가 아닌 WAS의 DataSource를 사용하시는 경우도 WAS별로 동일한 설정을 하실 수 있습니다.
		(WAS별 구체적인 설정은 WAS document 확인) -->
		
		
	<!-- 옵션설명
	1. initialSize : 풀의 초기 커넥션 갯수
	2. maxActive : 최대 커넥션 갯수
	3. maxWait : 커넥션이 존재하지 않을 때, 커넥션을 얻기까지 대기하는 최대 대기시간
	4. maxIdle : Idle상태에 풀이 소유한 최대 커넥션 갯수
	5. testOnBorrow : 풀에서 커넥션을 가져올시 커넥션의 유효성 검사
	6. testOnReturn : 풀에 커넥션을 리턴할 때 커넥션의 유효성 검사
	7. validationQuery : validate Query
	8. testWhileIdle : Idle상태에 커넥션의 유효성 검사
	9. timeBetweenEvictionRunsMillis : 설정된 주기를 통해 Evict(유효하지 않는 커넥션/정의된 시간이 만료된 커넥션을 풀에서 제거) 쓰레드를 수행
	10. minEvictableIdleTimeMiilis : Evict 쓰레드를 수행시, 만료여부를 체크할 시간을 정의
	11. numTestsPerEvictionRun : Evict 쓰레드를 수행시 수행할 커넥션의 갯수
	12. removeAbandonedTimeout : 유효하지 않은 커넥션의 삭제시의 타임아웃
	13. removeAbandoned : 유효하지 않는 커넥션의 제거 여부
	14. logAbandoned : 유효하지 않는 커넥션을 생성한 코드 위치 로그생성 여부
	
	1. defaultAutoCommit : 생성된 커넥션의 기본 auto commit 여부
	2. defaultReadOnly : 생성된 커넥션의 기본 read-only 여부
	3. defaultTransactionIsolation : 생성된 커넥션의 기본 트랜잭션 격리 수준
	4. defaultCatalog : 생성된 커넥션의 기본 카탈로그
	5. connectionInitSqls : ?
	6. poolPreparedStatements : Prepared Statements 사용 여부
	7. maxOpenPreparedStatements : Prepared Statements 최대 Open 갯수
	8. accessToUnderlyingConnectionAllowed : ?
	9. minIdle : Idle상태에 풀이 소유한 최소 커넥션 갯수
	 -->
</beans>
