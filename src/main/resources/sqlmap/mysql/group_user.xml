<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserGroup">
	
	<select id="list" parameterType="Map" resultType="mcmap">
		SELECT  
			sg.GROUP_SEQ, sg.GROUP_NM, sg.PARENT_SEQ, sg.USE_YN, sg.REG_DT, sg.ORDER_SEQ, sg2.LEVEL, sg.DEL_YN, sg.MANAGE_SEQ,
			RESPONSIBILITIES,
			FN_GET_SPLIT(sg.TEL, 1, '-', '') as TEL1, FN_GET_SPLIT(sg.TEL, 2, '-', '') as TEL2, FN_GET_SPLIT(sg.TEL, 3, '-', '') as TEL3,
			FN_GET_SPLIT(sg.FAX, 1, '-', '') as FAX1, FN_GET_SPLIT(sg.FAX, 2, '-', '') as FAX2, FN_GET_SPLIT(sg.FAX, 3, '-', '') as FAX3,
			sys_connect_by_path_group_user_order(sg.GROUP_SEQ, '_') AS order_set
		FROM    (
		        SELECT  start_with_connect_by_group_user() AS PARENT_SEQ, @level AS LEVEL, @rn:=@rn+1 AS rn, @id
		        FROM    (
		                SELECT  @start_with := IFNULL(#{start_group_seq}, 0),
		                        @id := @start_with,
		                        @level := 0,
                            	@rn := 0
		                ) vars, MC_USER_GROUP
		        ) sg2
		JOIN    MC_USER_GROUP sg
		ON      sg.GROUP_SEQ = sg2.PARENT_SEQ
		ORDER BY order_set ASC
	</select>
	
	<select id="view" parameterType="Map" resultType="mcmap">
		SELECT
			GROUP_SEQ, GROUP_NM, PARENT_SEQ, USE_YN, REG_DT, ORDER_SEQ, DEL_YN, MANAGE_SEQ,
			RESPONSIBILITIES,
			FN_GET_SPLIT(TEL, 1, '-', '') as TEL1, FN_GET_SPLIT(TEL, 2, '-', '') as TEL2, FN_GET_SPLIT(TEL, 3, '-', '') as TEL3,
			FN_GET_SPLIT(FAX, 1, '-', '') as FAX1, FN_GET_SPLIT(FAX, 2, '-', '') as FAX2, FN_GET_SPLIT(FAX, 3, '-', '') as FAX3
		FROM MC_USER_GROUP a
		WHERE a.GROUP_SEQ = #{group_seq}
	</select>
	
	<update id="write" parameterType="Map">
		INSERT INTO MC_USER_GROUP(
			GROUP_NM, PARENT_SEQ, USE_YN, TEL, FAX, RESPONSIBILITIES, MANAGE_SEQ,
			REG_NM, REG_ID, REG_DT, DEL_YN, ORDER_SEQ
		 )
		 VALUES(
			#{group_nm}, COALESCE(#{parent_seq}, '0'), #{use_yn}, #{tel}, #{fax}, #{responsibilities}, #{manage_seq},
			#{session_member_nm}, #{session_member_id}, sysdate(), 'N',
			(SELECT COALESCE(MAX(ORDER_SEQ),0)+1 FROM MC_USER_GROUP a WHERE a.parent_seq=COALESCE(#{parent_seq}, '0'))
		 )
	</update>
	
	<update id="modify" parameterType="Map">
		UPDATE MC_USER_GROUP SET
			GROUP_NM = #{group_nm}
			,TEL = #{tel}
			,FAX = #{fax}
			,RESPONSIBILITIES = #{responsibilities}
			,USE_YN = #{use_yn}
			,MANAGE_SEQ = (case #{manage_seq} when '' then null else #{manage_seq} end)
			,MOD_ID = #{session_member_id}
			,MOD_NM = #{session_member_nm}
			,MOD_DT = sysdate()
		WHERE GROUP_SEQ=#{group_seq}
	</update>
	
	<update id="del" parameterType="Map">
		UPDATE MC_USER_GROUP SET
			DEL_YN = 'Y'
			,DEL_ID = #{session_member_id}
			,DEL_NM = #{session_member_nm}
			,DEL_DT = sysdate()
		WHERE GROUP_SEQ=#{group_seq}
	</update>
	
	<update id="del_member" parameterType="Map">
		UPDATE MC_USER_MEMBER SET
			DEL_YN = 'Y'
			,DEL_ID = #{session_member_id}
			,DEL_NM = #{session_member_nm}
			,DEL_DT = sysdate()
		WHERE GROUP_SEQ in (
			SELECT GROUP_SEQ FROM MC_USER_GROUP WHERE group_seq=#{group_seq}
			UNION ALL
			SELECT  
				sg.GROUP_SEQ
			FROM    (
			        SELECT  start_with_connect_by_group_user() AS PARENT_SEQ
			        FROM    (
			                SELECT  @start_with := #{group_seq},
			                        @id := @start_with,
			                        @level := 0,
						@rn := 0
			                ) vars, MC_USER_GROUP
			        WHERE   @id IS NOT NULL
			        ) sg2
			JOIN    MC_USER_GROUP sg
			ON      sg.GROUP_SEQ = sg2.PARENT_SEQ
				AND sg.DEL_YN='N'
		)
	</update>
	
	<update id="move_member" parameterType="Map">
		UPDATE MC_USER_MEMBER SET
			GROUP_SEQ = #{move_group_seq}
			,MOD_ID = #{session_member_id}
			,MOD_NM = #{session_member_nm}
			,MOD_DT = sysdate()
		WHERE GROUP_SEQ in (
				SELECT GROUP_SEQ FROM MC_USER_GROUP WHERE group_seq=#{group_seq}
				UNION ALL
				SELECT  
					sg.GROUP_SEQ
				FROM    (
				        SELECT  start_with_connect_by_group_user() AS PARENT_SEQ
				        FROM    (
				                SELECT  @start_with := #{group_seq},
				                        @id := @start_with,
				                        @level := 0,
							@rn := 0
				                ) vars, MC_USER_GROUP
				        WHERE   @id IS NOT NULL
				        ) sg2
				JOIN    MC_USER_GROUP sg
				ON      sg.GROUP_SEQ = sg2.PARENT_SEQ
					AND sg.DEL_YN='N'
		)
	</update>
	
	<select id="userAuthCheck" parameterType="Map" resultType="mcmap">
		SELECT GROUP_SEQ FROM MC_USER_GROUP WHERE group_seq=#{group_seq}
		UNION ALL
		SELECT  
			sg.GROUP_SEQ
		FROM    (
		        SELECT  start_with_connect_by_group_user() AS PARENT_SEQ
		        FROM    (
		                SELECT  @start_with := #{group_seq},
		                        @id := @start_with,
		                        @level := 0,
					@rn := 0
		                ) vars, MC_USER_GROUP
		        WHERE   @id IS NOT NULL
		        ) sg2
		JOIN    MC_USER_GROUP sg
		ON      sg.GROUP_SEQ = sg2.PARENT_SEQ
			AND sg.DEL_YN='N'
	</select>
	
	<update id="updateGroupOrder" parameterType="Map">
		UPDATE MC_USER_GROUP SET
			ORDER_SEQ=#{order_seq}
			, PARENT_SEQ=#{parent_seq}
			, MOD_ID = #{session_member_id}
			, MOD_NM = #{session_member_nm}
			, MOD_DT = sysdate()
		WHERE GROUP_SEQ = #{group_seq} 
	</update>
	
	<select id="menuGrantList" parameterType="Map" resultType="mcmap">
		SELECT 
			a.SITE_ID, a.TITLE, b.CMS_MENU_SEQ
		FROM MC_CMS_MENU a LEFT OUTER JOIN MC_CMS_MENU_GRANT b
		ON a.cms_menu_seq=b.cms_menu_seq
		WHERE b.group_seq=#{group_seq} 
	</select>
	
	<delete id="deleteMenuGrant" parameterType="Map">
		DELETE FROM MC_CMS_MENU_GRANT
		WHERE group_seq=#{group_seq} 
	</delete>
	
	<update id="insertMenuGrant" parameterType="Map">
		INSERT INTO MC_CMS_MENU_GRANT(
			 CMS_MENU_SEQ, GROUP_SEQ, GROUP_NM, ORDER_SEQ, 
			REG_ID, REG_NM, REG_DT
		)VALUES(
			#{cms_menu_seq}, #{group_seq}, #{group_nm}, #{order_seq}, 
			#{session_member_id}, #{session_member_nm}, sysdate()
		)
	</update>
	
</mapper>