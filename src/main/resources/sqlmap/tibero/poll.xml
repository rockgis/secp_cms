<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="poll">
	
	<select id="list" parameterType="Map" resultType="mcmap">
		SELECT 
			A.*
		FROM (
			SELECT 
				ROWNUM AS RN
				,TB.*
			FROM (
				SELECT
					T1.POLL_SEQ
					,T1.TITLE
					,T1.CONTENT
					,TO_CHAR(T1.START_DT, 'YYYY-MM-DD') AS START_DT
					,TO_CHAR(T1.END_DT, 'YYYY-MM-DD') AS END_DT
					,TO_CHAR(T1.REG_DT, 'YYYY-MM-DD') AS REG_DT
					,T1.REG_NM
					,T1.USE_YN
					,T1.CUD_GROUP_SEQ
					,T1.DUP_YN
					,CASE
						WHEN SYSDATE BETWEEN T1.START_DT AND T1.END_DT THEN 'Y'
						ELSE 'N'
					END OPEN_YN
					<![CDATA[
					,CASE
						WHEN SYSDATE >= T1.START_DT AND SYSDATE <= T1.END_DT THEN '설문참여' 
						WHEN SYSDATE > T1.START_DT AND SYSDATE > T1.END_DT THEN '설문완료'
						WHEN SYSDATE < T1.START_DT AND SYSDATE < T1.END_DT THEN '설문준비'
						ELSE ''
					END STAT
					,CASE
						WHEN SYSDATE >= T1.START_DT AND SYSDATE <= T1.END_DT THEN '1' 
						WHEN SYSDATE > T1.START_DT AND SYSDATE > T1.END_DT THEN '2'
						WHEN SYSDATE < T1.START_DT AND SYSDATE < T1.END_DT THEN '0'
						ELSE ''
					END STAT_NUM
					]]>
					,NVL((SELECT COUNT(DISTINCT REG_SEQ) FROM MC_POLL_RESULT WHERE POLL_SEQ = T1.POLL_SEQ GROUP BY POLL_SEQ),0) JOIN_CNT
				FROM
					MC_POLL T1
				WHERE
					DEL_YN='N'
				AND CMS_MENU_SEQ = #{cms_menu_seq}
				<if test="all == '' or all == null">
				AND USE_YN='Y' AND SYSDATE >= T1.START_DT
				</if>
				<if test="!(keyword == null or keyword == '')" >
					<choose>
						<when test="condition == 'TITLE'.toString()">AND TITLE like '%'||#{keyword}||'%'</when>
					</choose>
        		</if>
				ORDER BY POLL_SEQ DESC
			) TB
		) A
		WHERE RN BETWEEN NVL(#{rows, jdbcType=INTEGER},10) * (NVL(#{cpage, jdbcType=INTEGER},1) - 1) + 1 AND NVL(#{rows, jdbcType=INTEGER},10) * NVL(#{cpage, jdbcType=INTEGER},1)
	</select>
	
	<select id="pageinfo" parameterType="Map" resultType="mcmap">
		SELECT
			CEIL(COUNT(1)/NVL(#{rows, jdbcType=INTEGER} ,10)) TOTALPAGE
			,COUNT(1) TOTALCOUNT
		FROM
			MC_POLL
		WHERE
			DEL_YN='N'
		AND CMS_MENU_SEQ = #{cms_menu_seq}
		<if test="all == '' or all == null">
		AND USE_YN='Y' AND SYSDATE >= START_DT
		</if>
		<if test="!(keyword == null or keyword == '')" >
			<choose>
				<when test="condition == 'TITLE'.toString()">AND TITLE like '%'||#{keyword}||'%'</when>
			</choose>
      	</if>
	</select>
	
	<insert id="pollWrite" parameterType="Map">
		<selectKey keyProperty="poll_seq" resultType="int" order="BEFORE">
      		SELECT NVL(MAX(POLL_SEQ),0)+1 AS POLL_SEQ FROM MC_POLL
     	</selectKey> 
		INSERT INTO MC_POLL(
			POLL_SEQ
			,TITLE
			,CONTENT
			,START_DT
			,END_DT
			,REG_ID
			,REG_NM
			,REG_DT
			,DEL_YN
			,USE_YN
			,LOT_YN
			,CMS_MENU_SEQ
			,CUD_GROUP_SEQ
			,DUP_YN
		)values(
			#{poll_seq}
			,#{title}
			,#{content}
			,TO_DATE(#{start_dt}, 'YYYY-MM-DD')
			,TO_DATE(#{end_dt}, 'YYYY-MM-DD')
			,#{session_member_id}
			,#{session_member_nm}
			,SYSDATE
			,'N'
			,#{use_yn}
			,#{lot_yn}
			,#{cms_menu_seq}
			,#{cud_group_seq}
			,#{dup_yn}
		)
	</insert>
	
	<insert id="pollWriteQuestion" parameterType="Map">
		INSERT INTO MC_POLL_QUESTION(
			POLL_SEQ
			,QUESTION_SEQ
			,QUESTION
			,QUESTION_CONTENT
			,QUESTION_TYPE
			,DEL_YN
			,SUBJECT_YN
			,REQUIRED_YN
			,REQUIRED_COUNT
			,REQUIRED_COUNT_CONTROLL
		)VALUES(
			#{poll_seq}
			,#{question_seq}
			,#{question}
			,#{question_content}
			,#{question_type}
			,#{del_yn}
			,#{subject_yn}
			,#{required_yn}
			,#{required_count}
			,#{required_count_controll}
		)
	</insert>
	
	<insert id="pollWriteAnwser" parameterType="Map">
		INSERT INTO MC_POLL_ANSWER(
			QUESTION_SEQ
			,ANSWER_SEQ
			,ANSWER
			,POLL_SEQ
			,NULL_CHK
			,JUMP_CHK
			,DEL_YN
		)VALUES(
			#{question_seq}
			,#{answer_seq}
			,#{answer}
			,#{poll_seq}
			,#{null_chk}
			,#{jump_chk}
			,#{del_yn}
		)
	</insert>
	
	
	<select id="article" parameterType="Map" resultType="mcmap">
		SELECT
			POLL_SEQ
			,TITLE
			,CONTENT
			,TO_CHAR(START_DT, 'YYYY-MM-DD') AS START_DT
			,TO_CHAR(END_DT, 'YYYY-MM-DD') AS END_DT
			,TO_CHAR(REG_DT, 'YYYY-MM-DD') AS REG_DT
			,REG_NM
			,USE_YN
			,LOT_YN
			,CUD_GROUP_SEQ
			,DUP_YN
			,CASE 
				WHEN SYSDATE BETWEEN START_DT AND END_DT THEN 'Y'
				ELSE 'N'
			END OPEN_YN
			<![CDATA[
			,CASE 
				WHEN SYSDATE >= START_DT AND SYSDATE <= END_DT THEN '설문참여' 
				WHEN SYSDATE > START_DT AND SYSDATE > END_DT THEN '설문마감'
				WHEN SYSDATE < START_DT AND SYSDATE < END_DT THEN '설문준비'
				ELSE ''
			END STAT
			,CASE
				WHEN SYSDATE >= START_DT AND SYSDATE <= END_DT THEN '1' 
				WHEN SYSDATE > START_DT AND SYSDATE > END_DT THEN '2'
				WHEN SYSDATE < START_DT AND SYSDATE < END_DT THEN '0'
				ELSE ''
			END STAT_NUM
			]]>
			,(SELECT COUNT(DISTINCT REG_SEQ) FROM MC_POLL_RESULT WHERE POLL_SEQ = #{poll_seq} GROUP BY POLL_SEQ) JOIN_CNT
		FROM
		  MC_POLL
		WHERE 
			DEL_YN='N'
		AND POLL_SEQ=#{poll_seq}
		<if test="!(all == null or all == '')">
		AND USE_YN='Y' AND SYSDATE >= START_DT
		</if>
	</select>
	
	<select id="questionlist" parameterType="Map" resultType="mcmap">
		SELECT * FROM (
			SELECT
				QUESTION_SEQ
				,-1 SEQ
				,QUESTION
				,TO_CHAR(QUESTION_CONTENT)
				,QUESTION_TYPE
				,'' NULL_CHK
				,'' JUMP_CHK
				,DEL_YN
				,SUBJECT_YN
				,REQUIRED_YN
				,REQUIRED_COUNT
				,REQUIRED_COUNT_CONTROLL
			FROM
				MC_POLL_QUESTION
			WHERE
				POLL_SEQ=#{poll_seq}
		UNION ALL
			SELECT
				ANSWER_SEQ QUESTION_SEQ
				,QUESTION_SEQ SEQ
				,ANSWER QUESTION
				,'' QUESTION_CONTENT
				,'' QUESTION_TYPE
				,NULL_CHK NULL_CHK
				,JUMP_CHK JUMP_CHK
				,DEL_YN
				,'' SUBJECT_YN
				,'' REQUIRED_YN
				,0 REQUIRED_COUNT
				,'U' REQUIRED_COUNT_CONTROLL
			FROM
				MC_POLL_ANSWER
			WHERE
				POLL_SEQ=#{poll_seq}
		) AA
		ORDER BY
			SEQ ASC, QUESTION_SEQ ASC
	</select>
	
	<update id="pollUpdate" parameterType="Map">
		UPDATE MC_POLL SET 
			TITLE=#{title}
			,CONTENT = #{content}
			,START_DT=TO_DATE(#{start_dt}, 'YYYY-MM-DD')
			,END_DT=TO_DATE(#{end_dt}, 'YYYY-MM-DD')
			,USE_YN=#{use_yn}
			,LOT_YN=#{lot_yn}
			,CUD_GROUP_SEQ=#{cud_group_seq}
			,DUP_YN=#{dup_yn}
			,MOD_DT=SYSDATE
			,MOD_ID=#{session_member_id}
			,MOD_NM=#{session_member_nm}
		WHERE
			POLL_SEQ=#{poll_seq}
	</update>
	
	<delete id="deleteQuestion" parameterType="Map">
		DELETE FROM MC_POLL_QUESTION
		WHERE
			POLL_SEQ=#{poll_seq}
	</delete>
	
	<delete id="deleteAnswer" parameterType="Map">
		DELETE FROM MC_POLL_ANSWER
		WHERE
			POLL_SEQ=#{poll_seq}
	</delete>
	
	<delete id="resultInit" parameterType="Map">
		DELETE FROM MC_POLL_RESULT 
		WHERE 
			POLL_SEQ=#{poll_seq}
	</delete>
	
	<update id="delete" parameterType="Map">
		UPDATE MC_POLL SET
			DEL_YN='Y'
			,DEL_DT=SYSDATE
			,DEL_ID=#{session_member_id}
			,DEL_NM=#{session_member_nm}
		WHERE
			POLL_SEQ=#{poll_seq}
	</update>
	
	<select id="join_check_list" parameterType="Map" resultType="mcmap">
		SELECT
			T2.QUESTION_SEQ
			,T2.QUESTION_TYPE
			,MAX(T1.ANSWER_SEQ) ANSWER_SEQ
		FROM 
			MC_POLL_ANSWER T1, MC_POLL_QUESTION T2
		WHERE 
			T1.POLL_SEQ = #{poll_seq} 
		AND T2.POLL_SEQ = #{poll_seq}
		AND T1.DEL_YN = 'N'
		AND T2.DEL_YN = 'N'
		AND T1.QUESTION_SEQ = T2.QUESTION_SEQ
		GROUP BY 
			T2.QUESTION_SEQ, T2.QUESTION_TYPE
		ORDER BY
			T2.QUESTION_SEQ
	</select>
	
	<select id="join_mixtype_check" parameterType="Map" resultType="mcmap">
		SELECT 
			JUMP_CHK
		FROM 
			MC_POLL_ANSWER
		WHERE
			QUESTION_SEQ = #{question_seq}
		AND ANSWER_SEQ = #{answer_seq}
		AND POLL_SEQ = #{poll_seq}
	</select>
	
	<select id="insert_seq" parameterType="Map" resultType="mcmap">
		SELECT 
			NVL(MAX(REG_SEQ),0)+1 AS REG_SEQ
		FROM 
			MC_POLL_RESULT
		WHERE
			POLL_SEQ = #{poll_seq}
	</select>
	
	<insert id="insert_result" parameterType="Map">
		INSERT INTO MC_POLL_RESULT(
		    POLL_SEQ
			,QUESTION_SEQ
			,ANSWER_SEQ
			,ANSWER
			,REG_ID
			,REG_NM
			,REG_TEL
			,REG_EMAIL
			,REG_SEQ
			,LOT_WIN			
			,REG_DT
		)VALUES(
		  	#{poll_seq},
		    #{question_seq},
		    #{answer_seq},
		    #{answer},
		    #{session_member_id},
			#{session_member_nm},
			#{reg_tel},
			#{reg_email},
			#{reg_seq},
			'N',			
			SYSDATE
		  )
	</insert>

	<select id="result_question_list" parameterType="Map" resultType="mcmap">
		SELECT 
			T1.POLL_SEQ, 
			T1.QUESTION_SEQ, 
			T1.QUESTION_TYPE,
			T1.QUESTION,
			T1.QUESTION_CONTENT,
			T1.SUBJECT_YN,
			T1.REQUIRED_YN,
			T1.REQUIRED_COUNT,
			T1.REQUIRED_COUNT_CONTROLL,
			(SELECT COUNT(1) FROM MC_POLL_RESULT WHERE POLL_SEQ = T1.POLL_SEQ AND QUESTION_SEQ = T1.QUESTION_SEQ) TOTAL
		FROM 
			MC_POLL_QUESTION T1
		WHERE 
			T1.POLL_SEQ = #{poll_seq}
		AND T1.DEL_YN='N'
		ORDER BY 
			T1.POLL_SEQ ASC, T1.QUESTION_SEQ ASC
	</select>
	
	<select id="result_answer_list" parameterType="Map" resultType="mcmap">
		SELECT
			T1.POLL_SEQ,
			T1.QUESTION_SEQ,
			T1.ANSWER_SEQ,
			T1.ANSWER,
			T1.JUMP_CHK,
			T1.NULL_CHK,
            T2.CNT
		FROM
			MC_POLL_ANSWER T1
			LEFT OUTER JOIN (SELECT QUESTION_SEQ, ANSWER_SEQ, COUNT(T2.QUESTION_SEQ) AS CNT FROM MC_POLL_RESULT T2 WHERE T2.POLL_SEQ = #{poll_seq} GROUP BY QUESTION_SEQ, ANSWER_SEQ) T2 
            ON T1.QUESTION_SEQ = T2.QUESTION_SEQ AND T1.ANSWER_SEQ = T2.ANSWER_SEQ           
		WHERE
			T1.POLL_SEQ = #{poll_seq}
		AND T1.DEL_YN = 'N'
		ORDER BY 
			T1.POLL_SEQ ASC, T1.QUESTION_SEQ ASC, T1.ANSWER_SEQ ASC
	</select>
	
	<select id="result_detail_list" parameterType="Map" resultType="mcmap">
		SELECT
			ANSWER
			,REG_NM
		FROM
			MC_POLL_RESULT
		WHERE
			POLL_SEQ=#{poll_seq}
		AND QUESTION_SEQ=#{question_seq}
		AND ANSWER_SEQ=#{answer_seq}
		<![CDATA[
		AND ANSWER <> 'checked'
		]]>
		ORDER BY REG_SEQ ASC
	</select>
	
	<select id="joinCheck" parameterType="Map" resultType="mcmap">
		SELECT 
			COUNT(DISTINCT REG_SEQ) AS CNT 
		FROM 
			MC_POLL_RESULT 
		WHERE 
			POLL_SEQ = #{poll_seq}
		<if test="!(reg_tel == '' or reg_tel == null)">	
		AND REG_TEL = #{reg_tel}
		</if>
		<if test="!(reg_id == '' or reg_id == null)">	
		AND REG_ID = #{reg_id}
		</if>
	</select>
	
	
	<select id="select_poll_list" parameterType="Map" resultType="mcmap">
        SELECT 
                A.TITLE,
                TO_CHAR(A.START_DT, 'YYYY-MM-DD') AS START_DT,
                TO_CHAR(A.END_DT, 'YYYY-MM-DD') AS END_DT,
				<![CDATA[
                CASE
                    WHEN SYSDATE >= A.START_DT AND SYSDATE <= A.END_DT THEN '설문참여' 
                    WHEN SYSDATE > A.START_DT AND SYSDATE > A.END_DT THEN '설문완료'
                    WHEN SYSDATE < A.START_DT AND SYSDATE < A.END_DT THEN '설문준비'
                    ELSE ''
                END STAT,
				]]>
                C.ANSWER,
                TO_CHAR(C.REG_DT, 'YYYY-MM-DD') AS ANS_REG_DT
        FROM 
                MC_POLL A
                JOIN (
                    SELECT REG_SEQ,POLL_SEQ, REG_DT, LISTAGG(ANSWER, ',')  WITHIN GROUP(ORDER BY ASWER) AS ANSWER FROM MC_POLL_RESULT WHERE POLL_SEQ = #{poll_seq} GROUP BY REG_SEQ , POLL_SEQ, REG_DT
                ) C ON C.POLL_SEQ = A.POLL_SEQ
        WHERE 
                A.POLL_SEQ = #{poll_seq}
	</select>
	
	<update id="mc_poll_update" parameterType="Map">
		UPDATE MC_POLL SET DEL_YN = 'Y'
		WHERE POLL_SEQ IN
		<foreach collection="seq_list" separator="," index="index" open="(" close=")" item="item" >
		 	#{item}
		</foreach>
	</update>
	
	<update id="mc_poll_answer_update" parameterType="Map">
		UPDATE MC_POLL_ANSWER SET DEL_YN = 'Y'
		WHERE POLL_SEQ IN
		<foreach collection="seq_list" separator="," index="index" open="(" close=")" item="item" >
		 	#{item}
		</foreach>
	</update>
	
	<update id="mc_poll_question_update" parameterType="Map">
		UPDATE MC_POLL_QUESTION SET DEL_YN = 'Y'
		WHERE POLL_SEQ IN
		<foreach collection="seq_list" separator="," index="index" open="(" close=")" item="item" >
		 	#{item}
		</foreach>
	</update>
	
	<delete id="mc_poll_result_update" parameterType="Map">
		DELETE FROM MC_POLL_RESULT
		WHERE POLL_SEQ IN
		<foreach collection="seq_list" separator="," index="index" open="(" close=")" item="item" >
		 	#{item}
		</foreach>
	</delete>
	
	<select id="resultGroup" parameterType="Map" resultType="mcmap">
		SELECT 
			REG_NM,
			REG_EMAIL,
			REG_TEL,
			REG_SEQ
		FROM 
			MC_POLL_RESULT 
		WHERE POLL_SEQ = #{poll_seq}
		GROUP BY REG_SEQ, REG_NM, REG_EMAIL, REG_TEL
	</select>
	

	<select id="resultList" parameterType="Map" resultType="mcmap">
		SELECT 
			*
		FROM 
			MC_POLL_RESULT 
		WHERE POLL_SEQ = #{poll_seq}
		ORDER BY 
            REG_SEQ ASC,
            QUESTION_SEQ ASC,
            ANSWER_SEQ ASC
	</select>
	
	<select id="resultListSeq" parameterType="Map" resultType="mcmap">
		SELECT 
			*
		FROM 
			MC_POLL_RESULT 
		WHERE POLL_SEQ = #{poll_seq} AND REG_SEQ = #{reg_seq}
		ORDER BY 
            REG_SEQ ASC,
            QUESTION_SEQ ASC,
            ANSWER_SEQ ASC
	</select>
		
</mapper>